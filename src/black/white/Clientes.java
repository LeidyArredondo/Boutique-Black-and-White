/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package black.white;

import Utilidades.DepartamentosMunicipios;
import java.awt.Image;
import Utilidades.ValidacionesCampos;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import logica.MetodosCliente;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import Utilidades.ReporteCliente;
import listas.ListaCliente;
import logica.MetodosCliente;

public class Clientes extends javax.swing.JFrame {                                    //declaro todas las variables globales

    File fil;
    ValidacionesCampos v = new ValidacionesCampos();
    MetodosCliente nuevoCliente = new MetodosCliente();          //instanciamos la variable tipo metodoscliente...que nos ayuda a guardar y a consultar 
    Date fecha;
    int swModificar = 0;
    String doc;
    private FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de Imagen", ".jpg");
    String rutaimagen;
    ImageIcon imaInforma = new ImageIcon("C:\\Boutique\\src\\Imagenes\\iconoInfor.jpg");
    ImageIcon imaPregunta = new ImageIcon("C:\\Boutique\\src\\Imagenes\\pregun.jpg");
    ListaCliente listaCliente;
    DepartamentosMunicipios depaMuni;
    String[] vecDepa, vecMuni;                           //declarando una variable de tipo lista cliente ...para acceder a todos los subprogramas
    String ventana = "Gestionar Cliente - S.I.C";

    public Clientes(ListaCliente listaClie) {                  //constructor
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        this.setVisible(true);
        this.DesactivarCampos();
        this.validarCamposCliente();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        rutaimagen = "";
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        this.listaCliente = listaClie;    //hacemos igual a la variable lista cliente de la clase a las lista clie que nos llega por parametros
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/clientes.jpg")).getImage());
        depaMuni = new DepartamentosMunicipios();
        jdFechaNac.setMaxSelectableDate(new Date());

        vecDepa = depaMuni.cargarDepartamentos();

        for (int j = 0; j < vecDepa.length; j++) {

            this.cmbDepar.addItem(vecDepa[j]);

        }

    }

    private Clientes() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCargar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtApellido = new javax.swing.JTextField();
        labApellido = new javax.swing.JLabel();
        labDocumento = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        labTipoDocumento = new javax.swing.JLabel();
        labGenero = new javax.swing.JLabel();
        labNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        labFechaNac = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        labCel = new javax.swing.JLabel();
        txtCel = new javax.swing.JTextField();
        labCorreo = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        cmbTipoDocum = new javax.swing.JComboBox();
        cmbGenero = new javax.swing.JComboBox();
        labDepar = new javax.swing.JLabel();
        cmbDepar = new javax.swing.JComboBox();
        labMun = new javax.swing.JLabel();
        cmbMun = new javax.swing.JComboBox();
        jdFechaNac = new com.toedter.calendar.JDateChooser();
        labTelefono1 = new javax.swing.JLabel();
        labDirec = new javax.swing.JLabel();
        txtDirec = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        btnListar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestión Clientes");

        btnCargar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCargar.setText("Cargar Imagen");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar.jpg"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnConsultar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/consultar.jpg"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modificar.jpg"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.jpg"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.jpg"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCrear.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/descarga.jpg"))); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/400px-borrar_svg.jpg"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoFocusLost(evt);
            }
        });
        txtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoActionPerformed(evt);
            }
        });

        labApellido.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labApellido.setText("Apellido(*):");

        labDocumento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labDocumento.setText("Documento(*):");

        txtDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDocumentoFocusLost(evt);
            }
        });
        txtDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocumentoActionPerformed(evt);
            }
        });

        labTipoDocumento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labTipoDocumento.setText("Tipo de Documento(*):");

        labGenero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labGenero.setText("Género:");

        labNombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labNombre.setText("Nombre(*):");

        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        labFechaNac.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labFechaNac.setText("Fecha Nacimiento:");

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        labCel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labCel.setText("Celular:");

        txtCel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCelFocusLost(evt);
            }
        });
        txtCel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelActionPerformed(evt);
            }
        });

        labCorreo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labCorreo.setText("Correo electrónico:");

        txtCorreo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCorreoFocusLost(evt);
            }
        });
        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorreoKeyPressed(evt);
            }
        });

        cmbTipoDocum.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbTipoDocum.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "C.C", "Cédula Extranjera", "Pasaporte", "NIT" }));

        cmbGenero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbGenero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Femenino" }));

        labDepar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labDepar.setText("Departamento:");

        cmbDepar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbDepar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDeparActionPerformed(evt);
            }
        });

        labMun.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labMun.setText("Municipio:");

        cmbMun.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbMun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMunActionPerformed(evt);
            }
        });

        labTelefono1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labTelefono1.setText("Teléfono:");

        labDirec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labDirec.setText("Dirección:");

        txtDirec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDirecActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Los Campos marcados con (*) son obligatorios");

        jLabel2.setBackground(new java.awt.Color(204, 204, 255));
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setText("imagen");
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 1, true));

        btnListar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Listar.jpg"))); // NOI18N
        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnListar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificar)
                                .addGap(18, 18, 18)
                                .addComponent(btnConsultar)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpiar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labNombre)
                                    .addComponent(labGenero)
                                    .addComponent(labDepar)
                                    .addComponent(labDirec)
                                    .addComponent(labCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTipoDocum, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDepar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDirec, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labMun, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labFechaNac)
                                    .addComponent(labApellido)
                                    .addComponent(labDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labCel)
                                            .addComponent(labTelefono1))))
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(398, 398, 398)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbMun, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jdFechaNac, txtApellido, txtCel, txtDocumento, txtNombre, txtTelefono});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnConsultar, btnCrear, btnEliminar, btnGuardar, btnLimpiar, btnListar, btnModificar, btnSalir});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCorreo, txtDirec});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbDepar, cmbGenero, cmbMun});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(labNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(48, 48, 48))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jdFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbTipoDocum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbMun, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labMun, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labDepar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDepar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnCargar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labDirec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(labCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDirec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labCel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(2, 2, 2)))
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnGuardar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, labDocumento});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnConsultar, btnCrear, btnEliminar, btnGuardar, btnLimpiar, btnListar, btnModificar, btnSalir});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jdFechaNac, txtApellido, txtCel, txtCorreo, txtDirec, txtDocumento, txtNombre, txtTelefono});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbDepar, cmbGenero, cmbMun});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed

        //Crear un objeto JFileChooser
        JFileChooser dlg = new JFileChooser();
        //Del objeto creado llamamos el metodo setFileFilter
        dlg.setFileFilter(filter);
        //Abrir la ventana de dialogo para escojer las imagenes
        int option = dlg.showOpenDialog(this);
        //Si hacemos clic en el boton abrir
        if (option == JFileChooser.APPROVE_OPTION) {
            //Obtener el nombre del archivo seleccionado
            String fil = dlg.getSelectedFile().getPath();
            //Obtener la direccion donde se guarda la imagen
            String file = dlg.getSelectedFile().toString();
            jLabel2.setIcon(new ImageIcon(fil));
            //Modificar la imagen
            ImageIcon icon = new ImageIcon(fil);
            //Extraer la imagen del icono
            Image img = icon.getImage();
            //Cambiar tamaño a la imagen       
            Image newimg = img.getScaledInstance(153, 160, java.awt.Image.SCALE_SMOOTH);
            //Se genera el ImageIcon con la nueva imagen
            ImageIcon newIcon = new ImageIcon(newimg);
            jLabel2.setIcon(newIcon);
            //jLimagen.setSize(153,160);
            //pone la ruta de la imagen en el textbox 1
            jTextField1.setText(file);
            //pone el nombre de la imagen en el textbox 2
            jTextField2.setText(fil);
            rutaimagen = "";
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        nuevoCliente = this.GuardarCampos();
        if (this.validacionObligatorios().equals("")) {

            if (swModificar == 1) {

                if (listaCliente.guardarModificacionCliente(nuevoCliente)) {      //se llama desde un condicional ya q retorna un true o un false

                    JOptionPane.showMessageDialog(this, "Se Guardó la Modificación Correctamente", "Gestionar Cliente - S.I.C ",
                            JOptionPane.OK_OPTION, imaInforma);
                    this.LimpiaCampos();
                    this.DesactivarCampos();
                    swModificar = 0;

                    btnGuardar.setEnabled(false);
                    this.activarBotones();

                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo guardar la Modificación Correctamente", "Gestionar Cliente - S.I.C ",
                            JOptionPane.OK_OPTION, imaInforma);
                }

            } else {

                if (listaCliente.siExiste(nuevoCliente.getDocumen())) {

                    JOptionPane.showMessageDialog(this, "Este Cliente ya Existe", "Gestionar Cliente - S.I.C ",
                            JOptionPane.OK_OPTION, imaInforma);

                } else {

                    if (listaCliente.guardarCliente(nuevoCliente)) {    //se cambio a procedimiento return false o true

                        JOptionPane.showMessageDialog(this, "Se guardó correctamente", "Gestionar Cliente - S.I.C ",
                                JOptionPane.OK_OPTION, imaInforma);
                        btnGuardar.setEnabled(false);
                        this.activarBotones();

                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo guardar Correctamente", "Gestionar Cliente - S.I.C ",
                                JOptionPane.OK_OPTION, imaInforma);
                    }

                    this.LimpiaCampos();
                    this.DesactivarCampos();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese Los Campos Obligatorios", "Gestionar Cliente - S.I.C ",
                    JOptionPane.OK_OPTION, imaInforma);
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed

        String documentoaConsultar = JOptionPane.showInputDialog(this, "Ingrese el Documento del Cliente");
        nuevoCliente = listaCliente.buscarCliente(documentoaConsultar);      //nuevocliente es una variable de tipo metodoscliente
        if (nuevoCliente == null) {
            JOptionPane.showMessageDialog(this, "El Número de Documento no Existe", "Gestionar Cliente - S.I.C ",
                    JOptionPane.OK_OPTION, imaInforma);
        } else {
            this.LlenarDatos();                                                         // llena cada uno de los campos del cliente

        }


    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        String clienteaModificar = JOptionPane.showInputDialog(this, "Ingrese el número de documento del cliente ");
        if (listaCliente.siExiste(clienteaModificar)) {
            nuevoCliente = listaCliente.buscarCliente(clienteaModificar);     // funcion...porque retorna una variable de tipo metodoscliente
            this.LlenarDatos();
            this.ActivarCampos();
            swModificar = 1;
            this.desactivarBotones();
        } else {
            JOptionPane.showMessageDialog(this, "El documento del cliente ingresado no esta registrado", "Gestionar Cliente - S.I.C ",
                    JOptionPane.OK_OPTION, imaInforma);
        }

        txtDocumento.setEnabled(false);
        cmbTipoDocum.setEnabled(false);


    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        String clienteaEliminar = JOptionPane.showInputDialog(this, "Ingrese el Número de Documento ha Eliminar");
        if (listaCliente.eliminarCliente(clienteaEliminar)) {
            JOptionPane.showMessageDialog(this, "Se eliminó correctamente", "Gestionar Cliente - S.I.C ",
                    JOptionPane.OK_OPTION, imaInforma);
            this.LimpiaCampos();
        } else {
            JOptionPane.showMessageDialog(this, "El cliente no existe!", "Gestionar Cliente - S.I.C ",
                    JOptionPane.OK_OPTION, imaInforma);
        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed

        int opc;
        opc = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea salir ?",
                "Salir.  Sistema Integral Comercial S.I.C", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, imaPregunta);
        if (opc == 0) {
            this.setVisible(false);

        }


    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        this.ActivarCampos();
        this.LimpiaCampos();
        this.desactivarBotones();
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.LimpiaCampos();
        this.DesactivarCampos();
        this.activarBotones();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoActionPerformed

    private void txtDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocumentoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtCelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelActionPerformed

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void txtDirecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDirecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDirecActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed

        ReporteCliente rc = new ReporteCliente(listaCliente.getCabeza());
    }//GEN-LAST:event_btnListarActionPerformed

    private void cmbMunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMunActionPerformed

    private void cmbDeparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDeparActionPerformed

        if (evt.getSource() == cmbDepar) {

            cmbMun.removeAllItems();
            vecMuni = depaMuni.cargarMunicipios(cmbDepar.getSelectedIndex());
            for (int j = 0; j < 125; j++) {

                if (vecMuni[j] == null) {

                    break;
                } else {

                    cmbMun.addItem(vecMuni[j]);
                }
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_cmbDeparActionPerformed

    private void txtCorreoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyPressed

        if (evt.getSource() == txtCorreo && evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (!v.validarEmail(txtCorreo.getText())) {

                JOptionPane.showMessageDialog(null, "No corresponde a un correo electrónico", "Recuperar Contraseña - S.I.C.", JOptionPane.OK_OPTION, null);
                txtCorreo.requestFocus();
            } else {
                txtCorreo.transferFocus();
            }

        }
// TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoKeyPressed

    private void txtDocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDocumentoFocusLost
        if (txtDocumento.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Este campo es obligatorio", "Gestionar Cliente - S.I.C", JOptionPane.YES_OPTION, imaInforma);
            txtDocumento.requestFocusInWindow();
        } else {
            if (listaCliente.siExiste(txtDocumento.getText())) {
                JOptionPane.showMessageDialog(null, "Este documento ya existe!", "Gestionar Cliente - S.I.C", JOptionPane.YES_OPTION, imaInforma);
            } else {
                txtDocumento.transferFocus();
            }
        }
// TODO add your handling code here:


    }//GEN-LAST:event_txtDocumentoFocusLost

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        v.validarObligatorios(txtNombre, ventana);
// TODO add your handling code here:
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtApellidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoFocusLost
        v.validarObligatorios(txtApellido, ventana);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoFocusLost

    private void txtCelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelFocusLost
        if (validarObligatorios()) {
            JOptionPane.showMessageDialog(null, "Digite todos los campos obligatorios", "Gestionar Cliente - S.I.C.", JOptionPane.OK_OPTION, imaInforma);
            txtCel.requestFocusInWindow();

        } else {
            btnGuardar.setEnabled(true);
            btnGuardar.requestFocusInWindow();
            this.DesactivarCampos();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_txtCelFocusLost

    private void txtCorreoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoFocusLost
        if (txtCorreo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Este campo es obligatorio", "Gestionar Cliente - S.I.C", JOptionPane.YES_OPTION, imaInforma);
            txtCorreo.requestFocusInWindow();
        } else {
            if (!v.validarEmail(txtCorreo.getText())) {

                JOptionPane.showMessageDialog(null, "No corresponde a un correo electrónico", "Gestionar Cliente - S.I.C.", JOptionPane.OK_OPTION, null);
                txtCorreo.requestFocus();
            } else {

                txtCorreo.transferFocus();
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cmbDepar;
    private javax.swing.JComboBox cmbGenero;
    private javax.swing.JComboBox cmbMun;
    private javax.swing.JComboBox cmbTipoDocum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private com.toedter.calendar.JDateChooser jdFechaNac;
    private javax.swing.JLabel labApellido;
    private javax.swing.JLabel labCel;
    private javax.swing.JLabel labCorreo;
    private javax.swing.JLabel labDepar;
    private javax.swing.JLabel labDirec;
    private javax.swing.JLabel labDocumento;
    private javax.swing.JLabel labFechaNac;
    private javax.swing.JLabel labGenero;
    private javax.swing.JLabel labMun;
    private javax.swing.JLabel labNombre;
    private javax.swing.JLabel labTelefono1;
    private javax.swing.JLabel labTipoDocumento;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCel;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDirec;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    public MetodosCliente GuardarCampos() {

        MetodosCliente p2 = new MetodosCliente();
        p2.setDocumen(txtDocumento.getText());
        p2.setTipo((String) cmbTipoDocum.getSelectedItem());
        p2.setNombre(txtNombre.getText());
        p2.setApellido(txtApellido.getText());
        p2.setGenero((String) cmbGenero.getSelectedItem());
        p2.setDeparta((String) cmbDepar.getSelectedItem());
        p2.setMunici((String) cmbMun.getSelectedItem());
        fecha = jdFechaNac.getDate();
        SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy");
        p2.setFechaNac(fecha);
        p2.setDirec(txtDirec.getText());
        p2.setTele(txtTelefono.getText());
        p2.setCel(txtCel.getText());
        p2.setCorreo(txtCorreo.getText());
        p2.setRutaImagen(jTextField1.getText());
        p2.setNombreImg(jTextField2.getText());

        return p2;

    }

    public MetodosCliente GuardarCamposMod() {

        MetodosCliente p2 = new MetodosCliente();

        p2.setDocumen(txtDocumento.getText());
        p2.setTipo((String) cmbTipoDocum.getSelectedItem());
        p2.setNombre(txtNombre.getText());
        p2.setApellido(txtApellido.getText());
        p2.setGenero((String) cmbGenero.getSelectedItem());
        p2.setDeparta((String) cmbDepar.getSelectedItem());
        p2.setMunici((String) cmbMun.getSelectedItem());
        fecha = jdFechaNac.getDate();
        SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy");
        p2.setFechaNac(fecha);
        p2.setDirec(txtDirec.getText());
        p2.setTele(txtTelefono.getText());
        p2.setCel(txtCel.getText());
        p2.setCorreo(txtCorreo.getText());
        p2.setRutaImagen(jTextField1.getText());
        p2.setNombreImg(jTextField2.getText());

        return p2;

    }

    private String validacionObligatorios() {
        String s = "";
        nuevoCliente = this.GuardarCampos();
        if (nuevoCliente.getDocumen().equals("") || nuevoCliente.getNombre().equals("") || nuevoCliente.getTipo().equals("") || nuevoCliente.getApellido().equals("")) {
            s = "Complete Todos Los Campos Obligatorios";
        }

        return s;
    }

    public void LimpiaCampos() {

        txtDocumento.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        cmbTipoDocum.setSelectedItem("");
        cmbGenero.setSelectedItem("");
        cmbDepar.setSelectedItem("");
        cmbTipoDocum.setSelectedItem("");
        txtDirec.setText("");
        txtTelefono.setText("");
        txtCel.setText("");
        txtCorreo.setText("");
        jdFechaNac.setDate(null);
        jLabel2.setIcon(null);
    }

    public void LlenarDatos() {
        txtDocumento.setText(nuevoCliente.getDocumen());
        txtNombre.setText(nuevoCliente.getNombre());
        txtApellido.setText(nuevoCliente.getApellido());
        cmbTipoDocum.setSelectedItem(nuevoCliente.getTipo());
        cmbGenero.setSelectedItem(nuevoCliente.getGenero());
        cmbDepar.setSelectedItem(nuevoCliente.getDeparta());
        cmbMun.setSelectedItem(nuevoCliente.getMunici());
        txtDirec.setText(nuevoCliente.getDirec());
        txtTelefono.setText(nuevoCliente.getTele());
        txtCel.setText(nuevoCliente.getCel());
        txtCorreo.setText(nuevoCliente.getCorreo());
        jdFechaNac.setDate(fecha);
        //jLabel3.setText(p.getRutaImagen());
        jTextField2.setText(nuevoCliente.getNombreImg());
        jTextField2.setText(nuevoCliente.getRutaImagen());
        //Obtener el nombre la imagen
        String fil = jTextField2.getText();
        //Obtener la direccion donde se guarda la imagen
        String file = jTextField1.getText();
        jLabel2.setIcon(new ImageIcon(fil));
        //Modificar la imagen
        ImageIcon icon = new ImageIcon(fil);
        //Extraer la imagen del icono
        Image img = icon.getImage();
        //Cambiar tamaño a la imagen       
        Image newimg = img.getScaledInstance(153, 160, java.awt.Image.SCALE_SMOOTH);
        //Se genera el ImageIcon con la nueva imagen
        ImageIcon newIcon = new ImageIcon(newimg);
        jLabel2.setIcon(newIcon);

    }

    public void ActivarCampos() {

        txtDocumento.setEnabled(true);
        txtNombre.setEnabled(true);
        txtApellido.setEnabled(true);
        cmbTipoDocum.setEnabled(true);
        cmbGenero.setEnabled(true);
        cmbDepar.setEnabled(true);
        cmbMun.setEnabled(true);
        txtDirec.setEnabled(true);
        txtTelefono.setEnabled(true);
        txtCel.setEnabled(true);
        txtCorreo.setEnabled(true);
        jdFechaNac.setEnabled(true);

    }

    public void DesactivarCampos() {

        txtDocumento.setEnabled(false);
        txtNombre.setEnabled(false);
        txtApellido.setEnabled(false);
        cmbTipoDocum.setEnabled(false);
        cmbGenero.setEnabled(false);
        cmbDepar.setEnabled(false);
        cmbMun.setEnabled(false);
        txtDirec.setEnabled(false);
        txtTelefono.setEnabled(false);
        txtCel.setEnabled(false);
        txtCorreo.setEnabled(false);
        jdFechaNac.setEnabled(false);

    }

    public void activarBotones() {

        btnConsultar.setEnabled(true);
        btnCrear.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnListar.setEnabled(true);
        btnSalir.setEnabled(true);
        btnModificar.setEnabled(true);

    }

    public void desactivarBotones() {

        btnConsultar.setEnabled(false);
        btnCrear.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnListar.setEnabled(false);
        btnSalir.setEnabled(false);
        btnModificar.setEnabled(false);

    }

    public void validarCamposCliente() {
        txtDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent e) {
                v.validarLongitud(10, txtDocumento, e);
                v.soloNumeros(txtDocumento, e);
            }
        });

        this.txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                v.validarLongitud(20, txtNombre, e);
                v.soloLetras(txtNombre, e);
            }
        });
        this.txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                v.validarLongitud(20, txtApellido, e);
                v.soloLetras(txtApellido, e);
            }
        });

        this.txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                v.validarLongitud(7, txtTelefono, e);
                v.soloNumeros(txtTelefono, e);
            }
        });

        this.txtCel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                v.validarLongitud(10, txtCel, e);
                v.soloNumeros(txtCel, e);
            }
        });
    }

    public boolean validarObligatorios() {
        if (txtApellido.getText().equals("") || txtNombre.getText().equals("") || txtDocumento.getText().equals("")) {
            return true;
        }
        return false;
    }

}
